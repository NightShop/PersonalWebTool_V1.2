// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalWebTool_V1.Models;

namespace PersonalWebTool_V1.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20210102142923_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PersonalWebTool_V1.Models.BlogPost", b =>
                {
                    b.Property<int>("BlogPostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogPostID");

                    b.HasIndex("PostCategoryID");

                    b.ToTable("BlogPosts");

                    b.HasData(
                        new
                        {
                            BlogPostID = 1,
                            Body = "This first blog post in my Personal Web Tool. This first blog post in my Personal Web Tool. This first blog post in my Personal Web Tool. This first blog post in my Personal Web Tool. ",
                            DateCreated = new DateTime(2021, 1, 2, 15, 29, 22, 415, DateTimeKind.Local).AddTicks(5875),
                            ImageName = "open-sign",
                            PostCategoryID = 4,
                            Title = "Initialize Personal Web Tool"
                        },
                        new
                        {
                            BlogPostID = 2,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            DateCreated = new DateTime(2021, 1, 2, 15, 29, 22, 419, DateTimeKind.Local).AddTicks(1252),
                            ImageName = "vzhodne-alpe",
                            PostCategoryID = 1,
                            Title = "Initialize Personal Web Tool"
                        });
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.PostCategory", b =>
                {
                    b.Property<int>("PostCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostCategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            PostCategoryID = 1,
                            Name = "Adventure"
                        },
                        new
                        {
                            PostCategoryID = 2,
                            Name = "Optimization"
                        },
                        new
                        {
                            PostCategoryID = 3,
                            Name = "Programming"
                        },
                        new
                        {
                            PostCategoryID = 4,
                            Name = "Miscellaneous"
                        });
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.BlogPost", b =>
                {
                    b.HasOne("PersonalWebTool_V1.Models.PostCategory", "Category")
                        .WithMany()
                        .HasForeignKey("PostCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
