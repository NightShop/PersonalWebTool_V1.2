// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalWebTool_V1.Models;

namespace PersonalWebTool_V1.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20210114110316_UpdateImgURLManual")]
    partial class UpdateImgURLManual
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PersonalWebTool_V1.Models.BlogPost", b =>
                {
                    b.Property<int>("BlogPostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrlManual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogPostID");

                    b.HasIndex("PostCategoryID");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.GratefulnessEntry", b =>
                {
                    b.Property<int>("GratefulnessEntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("GratefulnessEntryID");

                    b.ToTable("GratefulnessEntries");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.GratefulnessUnit", b =>
                {
                    b.Property<int>("GratefulnessUnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GratefulnessEntryID")
                        .HasColumnType("int");

                    b.Property<string>("Main")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GratefulnessUnitID");

                    b.HasIndex("GratefulnessEntryID");

                    b.ToTable("GratefulnessUnits");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.Habit", b =>
                {
                    b.Property<int>("HabitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("HabitID");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.HabitDay", b =>
                {
                    b.Property<int>("HabitDayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.HasKey("HabitDayID");

                    b.ToTable("HabitDays");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.HabitQuantity", b =>
                {
                    b.Property<string>("HabitQuantityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Counter")
                        .HasColumnType("int");

                    b.Property<int>("HabitDayID")
                        .HasColumnType("int");

                    b.Property<int?>("HabitID")
                        .HasColumnType("int");

                    b.HasKey("HabitQuantityID");

                    b.HasIndex("HabitDayID");

                    b.HasIndex("HabitID");

                    b.ToTable("HabitQuantities");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.PostCategory", b =>
                {
                    b.Property<int>("PostCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostCategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.BlogPost", b =>
                {
                    b.HasOne("PersonalWebTool_V1.Models.PostCategory", "Category")
                        .WithMany()
                        .HasForeignKey("PostCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.GratefulnessUnit", b =>
                {
                    b.HasOne("PersonalWebTool_V1.Models.GratefulnessEntry", "GratefulnessEntry")
                        .WithMany("GratefulnessUnits")
                        .HasForeignKey("GratefulnessEntryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GratefulnessEntry");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.HabitQuantity", b =>
                {
                    b.HasOne("PersonalWebTool_V1.Models.HabitDay", "HabitDay")
                        .WithMany("HabitQuantities")
                        .HasForeignKey("HabitDayID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalWebTool_V1.Models.Habit", "Habit")
                        .WithMany()
                        .HasForeignKey("HabitID");

                    b.Navigation("Habit");

                    b.Navigation("HabitDay");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.GratefulnessEntry", b =>
                {
                    b.Navigation("GratefulnessUnits");
                });

            modelBuilder.Entity("PersonalWebTool_V1.Models.HabitDay", b =>
                {
                    b.Navigation("HabitQuantities");
                });
#pragma warning restore 612, 618
        }
    }
}
